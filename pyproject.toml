[project]
# Docs: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/
name = "extra-platforms"
version = "3.2.4"
# Python versions and their status: https://devguide.python.org/versions/
requires-python = ">= 3.11"
description = "Detect platforms and group them by family"
authors = [{ name = "Kevin Deldycke", email = "kevin@deldycke.com" }]
readme = "readme.md"
keywords = ['multiplatform', 'pytest', 'python']
classifiers = [
    # See: https://pypi.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Framework :: Pytest',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Utilities',
    'Typing :: Typed',
]
# Semantic versioning works in theory. In practice, it is hard to guarantee.
# That's why we rely on >= specifier instead of ~= to relax constraints. This gives more freedom to packagers to
# release hotfixes for security vulnerabilities in the future.
# All minimal version choice are documented. Reasons to bump a minimal version are:
# - bug fixes,
# - security fixes,
# - new code path we depends on,
# - aligns minimal Python requirements to ours,
# - adds new explicit support Python version.
dependencies = [
    # boltons 23.0.0 is the first version to support Python 3.11.
    "boltons >= 23.0.0",
    # distro 1.9.0 adds support for ALT Linux.
    "distro >= 1.9.0",
]

[project.optional-dependencies]
pytest = [
    # pytest 8.2.1 is the first version to support Python 3.13.
    "pytest >= 8.2.1",
]
## Non-runtime dependencies, for development and CI, are using the ~= specifier to reduce randomness.
## Unless the package has been referenced in sections above, in which case we align the version specifier.
test = [
    "coverage [toml] ~= 7.10.0",
    # pytest 8.2.1 is the first version to support Python 3.13.
    "pytest >= 8.2.1",
    # More pytest plugins at: https://docs.pytest.org/en/latest/reference/plugin_list.html
    "pytest-cov ~= 7.0.0",
    "pytest-github-actions-annotate-failures ~= 0.3.0",
    "pytest-randomly ~= 3.16.0",
    "pytest-xdist [psutil] ~= 3.8.0",
    "requests ~= 2.32.3",
]
typing = [
    "types-boltons ~= 25.0.0.20250822",
    "types-requests ~= 2.32.4.20250611",
]
docs = [
    "furo ~= 2025.7.19",
    "myst-parser ~= 4.0.0",
    "sphinx ~= 8.2.0",
    "sphinx-autodoc-typehints ~= 3.2.0",
    "sphinx-copybutton ~= 0.5.2",
    "sphinx-design ~= 0.6.0",
    "sphinx-issues ~= 5.0.0",
    "sphinxcontrib-mermaid ~= 1.0.0",
    "sphinxext-opengraph ~= 0.13.0",
]

[project.urls]
"Homepage" = 'https://github.com/kdeldycke/extra-platforms'
"Documentation" = 'https://kdeldycke.github.io/extra-platforms'
"Repository" = 'https://github.com/kdeldycke/extra-platforms'
"Funding" = "https://github.com/sponsors/kdeldycke"
"Issues" = "https://github.com/kdeldycke/extra-platforms/issues"
"Changelog" = "https://github.com/kdeldycke/extra-platforms/blob/main/changelog.md"

[tool.uv]
package = true

[project.entry-points.pytest11]
# Make additional fixtures available to pytest.
# See: https://docs.pytest.org/en/latest/how-to/writing_plugins.html#making-your-plugin-installable-by-others
extra-platforms = "extra_platforms.pytest"

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
pretty = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
addopts = [
    "--durations=10",
    "--cov=extra_platforms",
    "--cov-branch",
    "--cov-precision=2",
    "--cov-report=term",
    "--cov-report=xml",
    "--junitxml=junit.xml",
    "--override-ini=junit_family=legacy",
]
# Make sure tests that are expected to fail do not resurect and start working all of a sudden.
xfail_strict = true

[tool.bumpversion]
current_version = "3.2.4"
allow_dirty = true

# TODO: Reuse the same search and replace patterns available in the reused workflows' pyproject.toml.

[[tool.bumpversion.files]]
# Update Python package version in any __init__.py file.
glob = "./**/__init__.py"
ignore_missing_version = true

[[tool.bumpversion.files]]
# Update version in project section.
filename = "./pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
# Update the version in standard Markdown changelog.
filename = "./changelog.md"
search = "## [{current_version} (unreleased)]("
replace = "## [{new_version} (unreleased)]("

[[tool.bumpversion.files]]
# Update the version in the citation file.
filename = "./citation.cff"
search = "version: {current_version}"
replace = "version: {new_version}"

[[tool.bumpversion.files]]
# Update the release date in the citation file.
filename = "./citation.cff"
regex = true
search = "date-released: \\d{{4}}-\\d{{2}}-\\d{{2}}"
replace = "date-released: {utcnow:%Y-%m-%d}"

[tool.typos]
default.extend-ignore-identifiers-re = [
    # error: `Tru` should be `Thru`, `True`
    #     ╭▸ ./extra_platforms/group_data.py:345:8
    #     │
    # 345 │     - `Tru64`
    #     ╰╴       ━━━
    "Tru64",
    # error: `PASE` should be `PASS`, `PACE`, `PARSE`, `PHASE`
    #     ╭▸ ./extra_platforms/group_data.py:371:8
    #     │
    # 371 │     - `PASE`
    #     ╰╴       ━━━━
    "PASE",
    # error: `Sur` should be `Sure`
    #    ╭▸ ./extra_platforms/platform.py:57:24
    #    │
    # 57 │     ("11", None): "Big Sur",
    #    ╰╴                       ━━━
    "Sur",
]
